# nginx/nginx.conf
events {
    worker_connections 1024;
}

http {
    include mime.types; # Required for Nginx to correctly serve HTML, CSS, JS

    server {
        listen 80; # Listen on port 80

        # Serve static frontend files
        location / {
            root /usr/share/nginx/html; # Points to the mounted frontend directory
            try_files $uri $uri/ /index.html; # Serve index.html for SPA-like routing
        }

        # Proxy requests for Event Service
        location /api/events {
            proxy_pass http://event_service:5001/events; # 'event_service' is the Docker Compose service name
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests for User Service
        location /api/users {
            proxy_pass http://user_service:5002/users; # 'user_service' is the Docker Compose service name
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests for User Registration (specific endpoint)
        location /api/users/register {
            proxy_pass http://user_service:5002/users/register;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Proxy requests for Notifier Service Health Check
        location /api/notifier/health {
            proxy_pass http://notifier_service:5003/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
